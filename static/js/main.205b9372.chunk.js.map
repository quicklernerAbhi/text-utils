{"version":3,"sources":["componants/Alert.js","componants/DummyNavbar.js","componants/TextForm.js","App.js","index.js"],"names":["Alert","props","setAlert","className","type","role","message","DummyNavbar","mode","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","for","TextForm","heading","showAlert","useState","text","setText","style","backgroundColor","color","placeholder","rows","value","onChange","e","target","upperCaseText","toUpperCase","lowerCaseText","toLowerCase","split","length","Math","round","App","setMode","setSetAlert","setTimeout","document","body","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.205b9372.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n  return (\r\n    props.setAlert && (\r\n      <div>\r\n        <div\r\n          className={`alert alert-${props.setAlert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.setAlert.type}</strong> {props.setAlert.message}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst DummyNavbar = (props) => {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            TextUtilities\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <div className=\"form-check form-switch\"></div>\r\n            </ul>\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className={`form-check-label text-${\r\n                  props.mode === \"dark\" ? \"light\" : \"dark\"\r\n                }`}\r\n                for=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.mode === \"dark\" ? \"Disable\" : \"Enable\"} the Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DummyNavbar;\r\n","import React, { useState } from \"react\";\r\n\r\nconst TextForm = ({ heading, mode, showAlert }) => {\r\n  // const [textDarkMode, setTextDarkMode] = useState({\r\n  //   backgroundColor: \"white\",\r\n  //   color: \"black\",\r\n  // });\r\n  // useEffect(() => {\r\n  //   if (mode === \"light\") {\r\n  //     setTextDarkMode({\r\n  //       backgroundColor: \"white\",\r\n  //       color: \"black\",\r\n  //     });\r\n  //   } else {\r\n  //     setTextDarkMode({\r\n  //       backgroundColor: \"black\",\r\n  //       color: \"white\",\r\n  //     });\r\n  //   }\r\n  // }, [mode]);\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const onChangeText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const toUpperCase = () => {\r\n    let upperCaseText = text.toUpperCase();\r\n    setText(upperCaseText);\r\n    showAlert(\"success\", \"TEXT IS CONVERTED TO UPPERCASE\");\r\n  };\r\n  const toLowerCase = () => {\r\n    let lowerCaseText = text.toLowerCase();\r\n    setText(lowerCaseText);\r\n    showAlert(\"success\", \"text is converted ti lowercase\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-4 background-color: black;\r\n    color: white;\"\r\n        style={\r\n          mode === \"light\"\r\n            ? {\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n              }\r\n            : {\r\n                backgroundColor: \"black\",\r\n                color: \"white\",\r\n              }\r\n        }\r\n      >\r\n        <h1 className=\"my-3\">{heading}</h1>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              style={\r\n                mode === \"light\"\r\n                  ? {\r\n                      backgroundColor: \"white\",\r\n                      color: \"black\",\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"black\",\r\n                      color: \"white\",\r\n                    }\r\n              }\r\n              placeholder=\"Add Text Here\"\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              value={text}\r\n              onChange={onChangeText}\r\n            ></textarea>\r\n          </div>\r\n        </form>\r\n        <button className=\"btn btn-primary mx-2\" onClick={toUpperCase}>\r\n          TO UPPER CASE\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={toLowerCase}>\r\n          to lower case\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={\r\n          mode === \"light\"\r\n            ? {\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n              }\r\n            : {\r\n                backgroundColor: \"black\",\r\n                color: \"white\",\r\n              }\r\n        }\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          <span className=\"font-weight-bold\">{text.split(\" \").length}</span>\r\n          words And\r\n          <span className=\"font-weight-bold\"> {text.length}</span> characters\r\n        </p>\r\n        <p>\r\n          <span className=\"font-weight-bold\">\r\n            {Math.round(text.length / 250) < 1\r\n              ? `few Seconds.. `\r\n              : `${Math.round(text.length / 250)} minutes `}\r\n          </span>\r\n          to read..\r\n        </p>\r\n        <h1>Preview</h1>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextForm;\r\n","import { useState } from \"react\";\nimport Alert from \"./componants/Alert\";\nimport DummyNavbar from \"./componants/DummyNavbar\";\n// import Navbar from \"./componants/Navbar\";\nimport TextForm from \"./componants/TextForm\";\nimport About from \"./componants/About\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [setAlert, setSetAlert] = useState(null);\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"success\", \"dark mode enabled\");\n      document.title = \"Dark mode active\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"success\", \"light mode is enabled\");\n      document.title = \"light mode active\";\n      // setInterval(() => {\n      //   document.title = \"download text utility ap\";\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title = \"look it is changing\";\n      // }, 1000);\n    }\n  };\n  const showAlert = (type, message) => {\n    setSetAlert({\n      type: type,\n      message: message,\n    });\n    setTimeout(() => {\n      setSetAlert(null);\n    }, 1500);\n  };\n  return (\n    <>\n      {/* <Router> */}\n      {/* <Navbar title=\"TextUtilities\" mode={mode} toggleMode={toggleMode} /> */}\n      <DummyNavbar mode={mode} toggleMode={toggleMode} />\n      <Alert setAlert={setAlert} />\n      {/* <Switch> */}\n      {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n      {/* <Route exact path=\"/\"> */}\n      <TextForm\n        heading=\"Enter text for analyze below\"\n        mode={mode}\n        showAlert={showAlert}\n      />\n      {/* </Route> */}\n      {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}